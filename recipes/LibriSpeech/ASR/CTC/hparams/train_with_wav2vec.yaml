# ################################
# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# Authors: Sung-Lin Yeh 2021
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 0
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref /domino/datasets/local/train_wav2vec2_char/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Where the wav2vec2 model is stored.
wav2vec2_hub: /domino/datasets/local/wav2vec2-base-pretrained-no-finetuning

# Data files
data_folder: /domino/datasets/local/Librispeech/LibriSpeech # e,g./path/to/LibriSpeech
data_folder_rirs: !ref <data_folder>
train_splits: ["train-1h"]
dev_splits: ["dev-clean"]
test_splits: ["test-clean", "test-other"]
skip_prep: False
ckpt_interval_minutes: 10 # save checkpoint every N min
train_csv: !ref <output_folder>/train.csv
valid_csv: !ref <output_folder>/dev-clean.csv
test_csv:
   - !ref <output_folder>/test-clean.csv
   - !ref <output_folder>/test-other.csv

# Training parameters
number_of_steps: 15000
lr: 0.00001
lr_peak: 0.00003
decay_factor: 1.01 
sorting: ascending
auto_mix_prec: False
sample_rate: 16000


# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 3 per GPU to fit 32GB of VRAM
batch_size: 3
test_batch_size: 8

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>

valid_dataloader_opts:
   batch_size: !ref <batch_size>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>

# Model parameters
dnn_neurons: 768
freeze_wav2vec: False
freeze_feature_extractor: True

# Outputs
output_neurons: 31  # BPE size, index(blank/eos/bos) = 0

# Decoding parameters
blank_index: 0
bos_index: 1
eos_index: 2

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_steps> # not number_of_epochs, because training stops after a given number of steps

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [95, 100, 105]

wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
   source: !ref <wav2vec2_hub>
   output_norm: True
   freeze: !ref <freeze_wav2vec>
   freeze_feature_extractor: !ref <freeze_feature_extractor>
   save_path: !ref <save_folder>/wav2vec2_checkpoint

ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <dnn_neurons>
   n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

modules:
   wav2vec2: !ref <wav2vec2>
   ctc_lin: !ref <ctc_lin>

model: !new:torch.nn.ModuleList
   - [!ref <wav2vec2>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.Adam
   lr: !ref <lr>

lr_annealing_model: !new:schedulers.PARPFineTuningScheduler
   lr_initial: !ref <lr>
   lr_peak: !ref <lr_peak>
   n_steps: !ref <number_of_steps>
   decay_factor: !ref <decay_factor>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      wav2vec2: !ref <wav2vec2>
      model: !ref <model>
      scheduler_model: !ref <lr_annealing_model>
      # scheduler_wav2vec: !ref <lr_annealing_wav2vec>
      counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
